{
    "Key": "RLXBIINVENTTRANSRESERVEDVIEW",
    "Value": "CREATE VIEW [dbo].[RLXBIINVENTTRANSRESERVEDVIEW] AS SELECT T1.ITEMID AS ITEMID, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, 1010 AS RECID, T2.INVENTTRANSID AS INVENTTRANSID, (CAST ((ISNULL((SUM(T1.QTY)), (0))) AS NUMERIC (32, 16))) AS SUMOFQTY FROM INVENTTRANS AS T1 CROSS JOIN INVENTTRANSORIGIN AS T2 CROSS JOIN RLXINVENTTABLE AS T3 CROSS JOIN RLXCOMMODITYGROUPTABLE AS T4 WHERE (((((((T1.STATUSISSUE = 4) AND (T1.STATUSRECEIPT = 0)) AND (T1.TRANSCHILDTYPE = 0)) AND ((T2.REFERENCECATEGORY = 0) AND (((T1.INVENTTRANSORIGIN = T2.RECID) AND (T1.DATAAREAID = T2.DATAAREAID)) ))) AND EXISTS (SELECT TOP 1 ' x ' FROM SALESLINE AS T5 WHERE ((((T2.INVENTTRANSID = T5.INVENTTRANSID) AND (T2.DATAAREAID = T5.DATAAREAID)) ) AND EXISTS (SELECT TOP 1 ' x ' FROM SALESTABLE AS T6 WHERE (((T5.SALESID = T6.SALESID) AND (T5.DATAAREAID = T6.DATAAREAID)) ))))) AND (((T1.ITEMID = T3.ITEMID) AND (T1.DATAAREAID = T3.DATAAREAID)) )) AND (((T3.COMMODITYGROUP = T4.COMMODITYGROUP) AND (T3.DATAAREAID = T4.DATAAREAID)) )) GROUP BY T1.ITEMID, T1.DATAAREAID, T1.PARTITION, T2.INVENTTRANSID, T2.DATAAREAID, T2.PARTITION, T3.DATAAREAID, T3.PARTITION, T4.DATAAREAID, T4.PARTITION;"
  },
  {
    "Key": "RLXBISALESRESERVATIONLINE",
    "Value": "CREATE VIEW [dbo].[RLXBISALESRESERVATIONLINE] AS SELECT T1.ITEMID AS ITEMID, T1.REMAINSALESPHYSICAL AS REMAINSALESPHYSICAL, T1.RECEIPTDATEREQUESTED AS RECEIPTDATEREQUESTED, T1.RLXDELIVERYPRIORITY AS RLXDELIVERYPRIORITY, T1.INVENTTRANSID AS INVENTTRANSID, T1.LINEAMOUNT AS LINEAMOUNT, T1.SALESPRICE AS SALESPRICE, T1.RECID AS SALESLINERECID, T1.LINEDELIVERYTYPE AS LINEDELIVERYTYPE, T1.SHIPPINGDATEREQUESTED AS SHIPPINGDATEREQUESTED, T1.SHIPPINGDATECONFIRMED AS SHIPPINGDATECONFIRMED, T1.RECEIPTDATECONFIRMED AS RECEIPTDATECONFIRMED, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, T1.RECID AS RECID, T2.SALESID AS SALESID, T2.SALESPOOLID AS SALESPOOLID, T2.RLXORDERCOMMENT AS RLXORDERCOMMENT, T2.PURCHORDERFORMNUM AS PURCHORDERFORMNUM, T2.CUSTOMERREF AS CUSTOMERREF, T2.RLXAREAID AS RLXAREAID, T3.INVENTSITEID AS INVENTSITEID, T3.INVENTLOCATIONID AS INVENTLOCATIONID, T4.COMREFCASE AS COMREFCASE, T5.ACCOUNTNUM AS ACCOUNTNUM, T5.LINEOFBUSINESSID AS LINEOFBUSINESSID, T5.MAINCONTACTWORKER AS MAINCONTACTWORKER, T5.COMPANYCHAINID AS COMPANYCHAINID, T6.NAMEALIAS AS NAMEALIAS, T7.ISUSEDFORALLOCATION AS ISUSEDFORALLOCATION, T8.RLXSHORTAGE AS RLXSHORTAGE, (CAST ((ISNULL((T9.DESCRIPTION), (''))) AS NVARCHAR (1000))) AS NOTNULLDESCRIPTION, (CAST ((ISNULL((T1.DELIVERYNAME), (''))) AS NVARCHAR (100))) AS DELIVERYNAME, (CAST ((ISNULL((T9.NAME), (''))) AS NVARCHAR (60))) AS NOTNULLNAME FROM SALESLINE AS T1 CROSS JOIN SALESTABLE AS T2 CROSS JOIN INVENTDIM AS T3 CROSS JOIN RLXINVENTTABLE AS T4 CROSS JOIN CUSTTABLE AS T5 CROSS JOIN DIRPARTYTABLE AS T6 CROSS JOIN RLXCOMMODITYGROUPTABLE AS T7 CROSS JOIN INVENTTABLE AS T8 LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T9 ON (((T8.PRODUCT = T9.PRODUCT) ) AND (T9.LANGUAGEID = N'en-us')) WHERE ((((((((T1.SALESSTATUS < 3) AND (NOT ((T2.SALESTYPE = 4)) AND (((T1.SALESID = T2.SALESID) AND (T1.DATAAREAID = T2.DATAAREAID)) ))) AND (((T2.CUSTACCOUNT = T5.ACCOUNTNUM) AND (T2.DATAAREAID = T5.DATAAREAID)) )) AND ((T5.PARTY = T6.RECID) )) AND (((T1.INVENTDIMID = T3.INVENTDIMID) AND (T1.DATAAREAID = T3.DATAAREAID)) )) AND (((T1.ITEMID = T4.ITEMID) AND (T1.DATAAREAID = T4.DATAAREAID)) )) AND (((T4.COMMODITYGROUP = T7.COMMODITYGROUP) AND (T4.DATAAREAID = T7.DATAAREAID)) )) AND (((T4.ITEMID = T8.ITEMID) AND (T4.DATAAREAID = T8.DATAAREAID)) ));"
  },
  {
    "Key": "RLXBIRESERVEDQTYVIEW",
    "Value": "CREATE VIEW [dbo].[RLXBIRESERVEDQTYVIEW] AS SELECT T1.ACCOUNTNUM AS ACCOUNTNUM, T1.ITEMID AS ITEMID, T1.RECEIPTDATEREQUESTED AS RECEIPTDATEREQUESTED, T1.RECEIPTDATECONFIRMED AS RECEIPTDATECONFIRMED, T1.SHIPPINGDATEREQUESTED AS SHIPPINGDATEREQUESTED, T1.SHIPPINGDATECONFIRMED AS SHIPPINGDATECONFIRMED, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, T1.RECID AS RECID, T3.CURRENCYCODE AS CURRENCYCODE, T3.INVENTDIMID AS INVENTDIMID, T3.SALESSTATUS AS SALESSTATUS, T3.SALESUNIT AS SALESUNIT, T3.SALESTYPE AS SALESTYPE, T3.RLXSECTORID AS SECTORID, T3.RLXDELIVERYPRIORITY AS DELIVERYPRIORITY, T3.BLOCKED AS STOPPED, T5.SALESID AS SALESID, T5.SALESGROUP AS SALESGROUP, T5.INVOICEACCOUNT AS INVOICEACCOUNT, T5.DLVMODE AS DLVMODE, T5.SALESORIGINID AS SALESORIGINID, T5.SALESPOOLID AS SALESPOOLID, T5.RLXAREAID AS RLXAREAID, (CAST ((ISNULL((ABS(T2.SUMOFQTY)), (0))) AS NUMERIC (32, 16))) AS RESERVEDQTY, (CAST ((CASE WHEN T4.BLISTERQTY = 0 THEN ISNULL((ABS(T2.SUMOFQTY)), (0)) ELSE ISNULL((ABS((T4.BLISTERQTY) * (T2.SUMOFQTY))), (0)) END) AS NUMERIC (32, 16))) AS RESERVEDPIECESQTY, (CAST (((T1.DATAAREAID) + (T1.ITEMID)) AS NVARCHAR (10))) AS ITEMIDPBIKEY, (CAST (((T1.DATAAREAID) + (T1.ACCOUNTNUM)) AS NVARCHAR (30))) AS ACCOUNTNUMPBIKEY, (CAST (((T1.DATAAREAID) + (T6.RLXSECTORID)) AS NVARCHAR (10))) AS SECTORIDPBIKEY FROM RLXBISALESRESERVATIONLINE AS T1 LEFT OUTER JOIN RLXBIINVENTTRANSRESERVEDVIEW AS T2 ON ((((T1.INVENTTRANSID = T2.INVENTTRANSID) AND (T1.DATAAREAID = T2.DATAAREAID)) ) AND (((T1.ITEMID = T2.ITEMID) AND (T1.DATAAREAID = T2.DATAAREAID)) )) CROSS JOIN SALESLINE AS T3 LEFT OUTER JOIN RLXINVENTTABLE AS T4 ON (((T3.ITEMID = T4.ITEMID) AND (T3.DATAAREAID = T4.DATAAREAID)) ) CROSS JOIN SALESTABLE AS T5 CROSS JOIN INVENTTABLE AS T6 WHERE (((NOT ((T1.LINEDELIVERYTYPE = 1)) AND (((T1.SALESLINERECID = T3.RECID) AND (T1.DATAAREAID = T3.DATAAREAID)) )) AND (((T3.SALESID = T5.SALESID) AND (T3.DATAAREAID = T5.DATAAREAID)) )) AND (((T3.ITEMID = T6.ITEMID) AND (T3.DATAAREAID = T6.DATAAREAID)) ));"
  },
  {
    "Key": "RLXBIINVENTTRANSFERSERVICE",
    "Value": "CREATE VIEW [dbo].[RLXBIINVENTTRANSFERSERVICE] AS SELECT SUM(T1.QTY) AS QTY, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, 1010 AS RECID, T2.INVENTTRANSID AS INVENTTRANSID, (CAST ((-(SUM(CASE WHEN T1.STATUSISSUE BETWEEN 5 AND 6 THEN T1.QTY END))) AS NUMERIC (32, 16))) AS OUTSTANDINGOPENORDER, (CAST ((-(SUM(CASE WHEN T1.STATUSISSUE = 4 THEN T1.QTY ELSE NULL END))) AS NUMERIC (32, 16))) AS SERVICERESERVEDQUANTITY FROM INVENTTRANS AS T1 CROSS JOIN INVENTTRANSORIGIN AS T2 WHERE ((((T1.STATUSISSUE >= 4) AND (T1.STATUSISSUE <= 6)) AND (((T1.INVENTTRANSORIGIN = T2.RECID) AND (T1.DATAAREAID = T2.DATAAREAID)) )) AND EXISTS (SELECT TOP 1 ' x ' FROM INVENTTRANSFERLINE AS T3 WHERE (NOT ((T3.RLXCMSSSERVICEFOLDERID = N'')) AND (((T2.INVENTTRANSID = T3.INVENTTRANSID) AND (T2.DATAAREAID = T3.DATAAREAID)) )))) GROUP BY T1.DATAAREAID, T1.PARTITION, T2.INVENTTRANSID, T2.DATAAREAID, T2.PARTITION; "
  },
  {
    "Key": "RLXBITransferOrdersView",
    "Value": "CREATE VIEW [dbo].[RLXBITRANSFERORDERSVIEW] AS SELECT T1.TRANSFERSTATUS AS TRANSFERSTATUS, T1.RLXAREAID AS RLXAREAID, T1.INVENTLOCATIONIDTO AS INVENTLOCATIONIDTO, T1.INVENTLOCATIONIDFROM AS INVENTLOCATIONIDFROM, T1.RECEIVEDATE AS RECEIVEDATE, T1.SHIPDATE AS SHIPDATE, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, 1010 AS RECID, T2.TRANSFERID AS TRANSFERID, T2.LINENUM AS LINENUM, T2.INVENTDIMID AS INVENTDIMID, T2.RLXSHIPMENTEXTRAWORKID AS RLXSHIPMENTEXTRAWORKID, T2.RLXCMSSSERVICEFOLDERID AS RLXCMSSSERVICEFOLDERID, T2.RLXCMSSDEPARTMENT AS RLXCMSSDEPARTMENT, T2.RLXCMSSWATCHMAKER AS RLXCMSSWATCHMAKER, T2.RLXCMSSURGENT AS RLXCMSSURGENT, T2.RLXSPECSN AS RLXSPECSN, T2.ITEMID AS ITEMID, T2.QTYTRANSFER AS QTYTRANSFER, T2.QTYSHIPPED AS QTYSHIPPED, T2.QTYREMAINSHIP AS QTYREMAINSHIP, T2.QTYRECEIVED AS QTYRECEIVED, T2.QTYREMAINRECEIVE AS QTYREMAINRECEIVE, T2.CREATEDDATETIME AS CREATED, T2.INVENTTRANSID AS INVENTTRANSID, T3.INVENTSTATUSID AS INVENTSTATUSID, T5.RELEASEDQTY AS RELEASEDQTY, T6.OUTSTANDINGOPENORDER AS OUTSTANDINGOPENORDER, T6.SERVICERESERVEDQUANTITY AS SERVICERESERVEDQUANTITY, SUM(T7.COSTAMOUNTPOSTED) AS COSTAMOUNTPOSTED, (CAST (((T1.DATAAREAID) + (T1.INVENTLOCATIONIDFROM)) AS NVARCHAR (20))) AS INVENTLOCATIONFROMPBIKEY, (CAST (((T1.DATAAREAID) + (T1.INVENTLOCATIONIDTO)) AS NVARCHAR (20))) AS INVENTLOCATIONTOPBIKEY, (CAST ((((T2.DATAAREAID) + (T2.TRANSFERID)) + (CAST (T2.LINENUM AS NVARCHAR))) AS NVARCHAR (35))) AS TRANSFERLINEPBIKEY FROM INVENTTRANSFERTABLE AS T1 CROSS JOIN INVENTTRANSFERLINE AS T2 CROSS JOIN INVENTDIM AS T3 CROSS JOIN INVENTTRANSORIGIN AS T4 CROSS JOIN WHSINVENTTRANSFERLINE AS T5 LEFT OUTER JOIN RLXBIINVENTTRANSFERSERVICE AS T6 ON (((T2.INVENTTRANSID = T6.INVENTTRANSID) AND (T2.DATAAREAID = T6.DATAAREAID)) ) CROSS JOIN INVENTTRANS AS T7 WHERE (((((((T1.TRANSFERID = T2.TRANSFERID) AND (T1.DATAAREAID = T2.DATAAREAID)) ) AND (((T2.INVENTDIMID = T3.INVENTDIMID) AND (T2.DATAAREAID = T3.DATAAREAID)) )) AND (((T2.INVENTTRANSID = T4.INVENTTRANSID) AND (T2.DATAAREAID = T4.DATAAREAID)) )) AND (((T4.RECID = T7.INVENTTRANSORIGIN) AND (T4.DATAAREAID = T7.DATAAREAID)) )) AND (((T2.RECID = T5.INVENTTRANSFERLINE) AND (T2.DATAAREAID = T5.DATAAREAID)) )) GROUP BY T1.TRANSFERSTATUS, T1.RLXAREAID, T1.INVENTLOCATIONIDTO, T1.INVENTLOCATIONIDFROM, T1.RECEIVEDATE, T1.SHIPDATE, T1.DATAAREAID, T1.PARTITION, T2.LINENUM, T2.TRANSFERID, T2.INVENTDIMID, T2.RLXSHIPMENTEXTRAWORKID, T2.RLXCMSSSERVICEFOLDERID, T2.RLXCMSSDEPARTMENT, T2.RLXCMSSWATCHMAKER, T2.RLXCMSSURGENT, T2.RLXSPECSN, T2.ITEMID, T2.QTYTRANSFER, T2.QTYSHIPPED, T2.QTYREMAINSHIP, T2.QTYRECEIVED, T2.QTYREMAINRECEIVE, T2.CREATEDDATETIME, T2.INVENTTRANSID, T2.DATAAREAID, T2.PARTITION, T3.INVENTSTATUSID, T3.DATAAREAID, T3.PARTITION, T4.DATAAREAID, T4.PARTITION, T5.RELEASEDQTY, T5.DATAAREAID, T5.PARTITION, T6.OUTSTANDINGOPENORDER, T6.SERVICERESERVEDQUANTITY, T6.DATAAREAID, T6.PARTITION, T7.DATAAREAID, T7.PARTITION; "
  },
  {
    "Key": "RLXBIInventTableView",
    "Value": "CREATE VIEW [dbo].[RLXBIINVENTTABLEVIEW] AS SELECT T1.ITEMID AS ITEMID, T1.NETWEIGHT AS NETWEIGHT, T1.NAMEALIAS AS ITEMNAME, T1.RLXSECTORID AS SECTORID, T1.TARAWEIGHT AS TARAWEIGHT, T1.RLXSHORTAGE AS RLXSHORTAGE, T1.ALTITEMID AS ALTITEMID, T1.USEALTITEMID AS USEALTITEMID, T1.RLXEXCHANGEITEMHQ AS RLXEXCHANGEITEMHQ, T1.ORIGCOUNTRYREGIONID AS ORIGINCOUNTRYREGION, T1.DATAAREAID AS DATAAREAID, T1.PARTITION AS PARTITION, T1.RECID AS RECID, T4.SEARCHNAME AS SEARCHNAME, T5.DESCRIPTION AS SECTORNAME, T7.RLXITEMSALESSTATUS AS SALESSTATUS, T8.RLXITEMPURCHSTATUS AS PURCHSTATUS, T9.NAME AS COMMODITYCODEDESCRIPTION, T9.CODE AS COMMODITYCODE, T10.SUPPITEMGROUPID AS SUPPITEMGROUPIDSALES, T11.SUPPITEMGROUPID AS SUPPITEMGROUPIDPURCH, T12.BRACELETREFERENCE AS BRACELETREFERENCE, T12.CALIBRE AS CALIBRE, T12.MATERIAL AS MATERIAL, T12.PUBLISHINGYEAR AS PUBLISHINGYEAR, T12.CASEDIAMETER AS CASEDIAMETER, T12.COMREFCASE AS COMREFCASE, T12.DDLANGUAGE AS DDLANGUAGE, T12.CATALOGCODE AS CATALOGCODE, T12.CASETYPE AS CASETYPE, T12.FAMILYCATALOGPRODUCT AS FAMILYCATALOGPRODUCT, T12.BEZELTYPE AS BEZELTYPE, T12.RMCBASE AS RMCBASE, T12.BLISTERQTY AS BLISTERQTY, T12.CATALOGLINE AS CATALOGLINE, T12.COLLECTION AS COLLECTION, T12.COMMODITYGROUPEXTERNAL AS COMMODITYGROUPEXTERNAL, T12.COMMODITYGROUP AS COMMODITYGROUP, T12.DIALREF AS DIALREF, T12.BRACELETCATALOGLINE AS BRACELETCATALOGLINE, T12.DIALGROUP AS DIALGROUP, T12.DISCONTINUATIONDATECONSUMERCATALOG AS DISCONTINUATIONDATECONSUMERCATALOG, T12.DISCONTINUATIONDATEGENERALCATALOG AS DISCONTINUATIONDATEGENERALCATALOG, T12.RELEASEMARKETDATE AS RELEASEMARKETDATE, T12.CITES AS CITES, T13.DESCRIPTION AS PRODUCTDESCRIPTIONGLOBAL, T13.NAME AS PRODUCTNAMEGLOBAL, T14.DESCRIPTION AS PRODUCTDESCRIPTIONLOCAL, T14.NAME AS PRODUCTNAMELOCAL, T15.DESCRIPTION AS PRODUCTDESCRIPTION_ENUS, T15.NAME AS PRODUCTNAME_ENUS, T16.DESCRIPTION AS PRODUCTDESCRIPTION_FR, T16.NAME AS PRODUCTNAME_FR, T17.DESCRIPTION AS PRODUCTDESCRIPTION_ES, T17.NAME AS PRODUCTNAME_ES, T18.DESCRIPTION AS DIALGROUPNAME, T19.DESCRIPTION AS BEZELTYPENAME, T20.DESCRIPTION AS BEZELTYPENAMEGLOBAL, T21.DESCRIPTION AS BEZELTYPENAMELOCAL, T22.DESCRIPTION AS DIALGROUPDESCRIPTIONGLOBAL, T23.DESCRIPTION AS DIALGROUPDESCRIPTIONLOCAL, T24.DESCRIPTION AS CASETYPEDESCRIPTIONGLOBAL, T25.DESCRIPTION AS CASETYPEDESCRIPTIONLOCAL, T26.DESCRIPTION AS CATALOGCODEDESCRIPTIONGLOBAL, T27.DESCRIPTION AS CATALOGCODEDESCRIPTIONLOCAL, T28.DESCRIPTION AS DISCLANGUAGEDESCRIPTIONGLOBAL, T29.DESCRIPTION AS DISCLANGUAGEDESCRIPTIONLOCAL, T30.DESCRIPTION AS MATERIALDESCRIPTIONGLOBAL, T31.DESCRIPTION AS MATERIALDESCRIPTIONLOCAL, T32.DESCRIPTION AS MATERIALGROUPEXTERNALDESCRIPTIONGLOBAL, T33.DESCRIPTION AS MATERIALGROUPEXTERNALDESCRIPTIONLOCAL, T34.DESCRIPTION AS MATERIALGROUPDESCRIPTIONGLOBAL, T35.DESCRIPTION AS MATERIALGROUPDESCRIPTIONLOCAL, T36.NAME AS ITEMGROUPNAME, T36.ITEMGROUPID AS ITEMGROUPID, T37.DESCRIPTION AS COMMODITYDESCRIPTIONGLOBAL, T38.DESCRIPTION AS COMMODITYDESCRIPTIONLOCAL, (CAST (((T1.DATAAREAID) + (T1.ITEMID)) AS NVARCHAR (30))) AS PBIKEY FROM INVENTTABLE AS T1 CROSS JOIN LANGUAGETABLE AS T2 LEFT OUTER JOIN LANGUAGETABLE AS T3 ON (T3.RLXBILANGUAGETYPE = 2) CROSS JOIN ECORESPRODUCT AS T4 LEFT OUTER JOIN RLXACTIVITYSECTOR AS T5 ON (((T1.RLXSECTORID = T5.SECTORID) AND (T1.DATAAREAID = T5.DATAAREAID)) ) CROSS JOIN INVENTITEMGROUPITEM AS T6 CROSS JOIN INVENTITEMSALESSETUP AS T7 CROSS JOIN INVENTITEMPURCHSETUP AS T8 LEFT OUTER JOIN ECORESCATEGORY AS T9 ON ((T1.INTRASTATCOMMODITY = T9.RECID) ) CROSS JOIN INVENTTABLEMODULE AS T10 CROSS JOIN INVENTTABLEMODULE AS T11 LEFT OUTER JOIN RLXINVENTTABLE AS T12 ON (((T1.ITEMID = T12.ITEMID) AND (T1.DATAAREAID = T12.DATAAREAID)) ) LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T13 ON (((T4.RECID = T13.PRODUCT) ) AND (T2.LANGUAGEID = T13.LANGUAGEID)) LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T14 ON (((T4.RECID = T14.PRODUCT) ) AND (T3.LANGUAGEID = T14.LANGUAGEID)) LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T15 ON (((T4.RECID = T15.PRODUCT) ) AND (T15.LANGUAGEID = N'en-US')) LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T16 ON (((T4.RECID = T16.PRODUCT) ) AND (T16.LANGUAGEID = N'fr')) LEFT OUTER JOIN ECORESPRODUCTTRANSLATION AS T17 ON (((T4.RECID = T17.PRODUCT) ) AND (T17.LANGUAGEID = N'es')) LEFT OUTER JOIN RLXDIALGROUPTRANSLATIONS AS T18 ON ((((T12.DIALGROUP = T18.DIALGROUP) AND (T12.DATAAREAID = T18.DATAAREAID)) ) AND (T18.LANGUAGEID = N'en-us')) LEFT OUTER JOIN RLXBEZELTYPETRANSLATIONS AS T19 ON ((((T12.BEZELTYPE = T19.BEZELTYPE) AND (T12.DATAAREAID = T19.DATAAREAID)) ) AND (T19.LANGUAGEID = N'en-US')) LEFT OUTER JOIN RLXBEZELTYPETRANSLATIONS AS T20 ON ((((T12.BEZELTYPE = T20.BEZELTYPE) AND (T12.DATAAREAID = T20.DATAAREAID)) ) AND (T2.LANGUAGEID = T20.LANGUAGEID)) LEFT OUTER JOIN RLXBEZELTYPETRANSLATIONS AS T21 ON ((((T12.BEZELTYPE = T21.BEZELTYPE) AND (T12.DATAAREAID = T21.DATAAREAID)) ) AND (T3.LANGUAGEID = T21.LANGUAGEID)) LEFT OUTER JOIN RLXDIALGROUPTRANSLATIONS AS T22 ON ((((T12.DIALGROUP = T22.DIALGROUP) AND (T12.DATAAREAID = T22.DATAAREAID)) ) AND (T2.LANGUAGEID = T22.LANGUAGEID)) LEFT OUTER JOIN RLXDIALGROUPTRANSLATIONS AS T23 ON ((((T12.DIALGROUP = T23.DIALGROUP) AND (T12.DATAAREAID = T23.DATAAREAID)) ) AND (T3.LANGUAGEID = T23.LANGUAGEID)) LEFT OUTER JOIN RLXCASETYPETRANSLATIONS AS T24 ON ((T2.LANGUAGEID = T24.LANGUAGEID) AND (((T12.CASETYPE = T24.CASETYPE) AND (T12.DATAAREAID = T24.DATAAREAID)) )) LEFT OUTER JOIN RLXCASETYPETRANSLATIONS AS T25 ON ((T3.LANGUAGEID = T25.LANGUAGEID) AND (((T12.CASETYPE = T25.CASETYPE) AND (T12.DATAAREAID = T25.DATAAREAID)) )) LEFT OUTER JOIN RLXCATALOGTRANSLATIONS AS T26 ON ((T2.LANGUAGEID = T26.LANGUAGEID) AND (((T12.CATALOGCODE = T26.CATALOGCODE) AND (T12.DATAAREAID = T26.DATAAREAID)) )) LEFT OUTER JOIN RLXCATALOGTRANSLATIONS AS T27 ON ((T3.LANGUAGEID = T27.LANGUAGEID) AND (((T12.CATALOGCODE = T27.CATALOGCODE) AND (T12.DATAAREAID = T27.DATAAREAID)) )) LEFT OUTER JOIN RLXDDLANGUAGETRANSLATIONS AS T28 ON ((T2.LANGUAGEID = T28.LANGUAGEID) AND (((T12.DDLANGUAGE = T28.DDLANGUAGE) AND (T12.DATAAREAID = T28.DATAAREAID)) )) LEFT OUTER JOIN RLXDDLANGUAGETRANSLATIONS AS T29 ON ((T3.LANGUAGEID = T29.LANGUAGEID) AND (((T12.DDLANGUAGE = T29.DDLANGUAGE) AND (T12.DATAAREAID = T29.DATAAREAID)) )) LEFT OUTER JOIN RLXMATERIALTRANSLATIONS AS T30 ON ((T2.LANGUAGEID = T30.LANGUAGEID) AND (((T12.MATERIAL = T30.MATERIAL) AND (T12.DATAAREAID = T30.DATAAREAID)) )) LEFT OUTER JOIN RLXMATERIALTRANSLATIONS AS T31 ON ((T3.LANGUAGEID = T31.LANGUAGEID) AND (((T12.MATERIAL = T31.MATERIAL) AND (T12.DATAAREAID = T31.DATAAREAID)) )) LEFT OUTER JOIN RLXCOMMODITYGROUPEXTERNALTRANSLATIONS AS T32 ON ((T2.LANGUAGEID = T32.LANGUAGEID) AND (((T12.COMMODITYGROUPEXTERNAL = T32.COMMODITYGROUPEXTERNAL) AND (T12.DATAAREAID = T32.DATAAREAID)) )) LEFT OUTER JOIN RLXCOMMODITYGROUPEXTERNALTRANSLATIONS AS T33 ON ((T3.LANGUAGEID = T33.LANGUAGEID) AND (((T12.COMMODITYGROUPEXTERNAL = T33.COMMODITYGROUPEXTERNAL) AND (T12.DATAAREAID = T33.DATAAREAID)) )) LEFT OUTER JOIN RLXCOMMODITYGROUPTRANSLATIONS AS T34 ON ((T2.LANGUAGEID = T34.LANGUAGEID) AND (((T12.COMMODITYGROUP = T34.COMMODITYGROUP) AND (T12.DATAAREAID = T34.DATAAREAID)) )) LEFT OUTER JOIN RLXCOMMODITYGROUPTRANSLATIONS AS T35 ON ((T3.LANGUAGEID = T35.LANGUAGEID) AND (((T12.COMMODITYGROUP = T35.COMMODITYGROUP) AND (T12.DATAAREAID = T35.DATAAREAID)) )) CROSS JOIN INVENTITEMGROUP AS T36 LEFT OUTER JOIN ECORESCATEGORYTRANSLATION AS T37 ON (((T9.RECID = T37.CATEGORY) ) AND (T2.LANGUAGEID = T37.LANGUAGEID)) LEFT OUTER JOIN ECORESCATEGORYTRANSLATION AS T38 ON (((T9.RECID = T38.CATEGORY) ) AND (T3.LANGUAGEID = T38.LANGUAGEID)) WHERE ((((((((T2.RLXBILANGUAGETYPE = 1) AND ((T1.PRODUCT = T4.RECID) )) AND (((T1.ITEMID = T6.ITEMID) ) AND ((T1.DATAAREAID = T6.ITEMDATAAREAID) ))) AND (((T6.ITEMGROUPID = T36.ITEMGROUPID) ) AND ((T6.ITEMGROUPDATAAREAID = T36.DATAAREAID) ))) AND (((T7.SEQUENCE = 0) AND (T7.INVENTDIMID = N'AllBlank')) AND (((T1.ITEMID = T7.ITEMID) AND (T1.DATAAREAID = T7.DATAAREAID)) ))) AND (((T8.SEQUENCE = 0) AND (T8.INVENTDIMID = N'AllBlank')) AND (((T1.ITEMID = T8.ITEMID) AND (T1.DATAAREAID = T8.DATAAREAID)) ))) AND ((T10.MODULETYPE = 2) AND (((T1.ITEMID = T10.ITEMID) AND (T1.DATAAREAID = T10.DATAAREAID)) ))) AND ((T11.MODULETYPE = 1) AND (((T1.ITEMID = T11.ITEMID) AND (T1.DATAAREAID = T11.DATAAREAID)) )));"
  }